(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[185],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1978:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return s},default:function(){return c}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),l={id:"hooks",title:"React Hooks",sidebar_label:"React Hooks",slug:"/react/hooks"},i={unversionedId:"packages/react/features/hooks",id:"packages/react/features/hooks",isDocsHomePage:!1,title:"React Hooks",description:"Keep in mind that React Hooks are only supported in Functional React Components!",source:"@site/docs/packages/react/features/Hooks.md",sourceDirName:"packages/react/features",slug:"/react/hooks",permalink:"/test/docs/react/hooks",editUrl:"https://github.com/agile-ts/documentation/tree/develop/docs/packages/react/features/Hooks.md",version:"current",lastUpdatedAt:1620883650,formattedLastUpdatedAt:"5/13/2021",sidebar_label:"React Hooks",frontMatter:{id:"hooks",title:"React Hooks",sidebar_label:"React Hooks",slug:"/react/hooks"},sidebar:"docs",previous:{title:"Installation",permalink:"/test/docs/react/installation"},next:{title:"AgileHOC",permalink:"/test/docs/react/AgileHOC"}},s=[{value:"<code>useAgile()</code>",id:"useagile",children:[{value:"\ud83d\uddc2 Array",id:"-array",children:[]},{value:"\ud83c\udff7 Subscribable Instances",id:"-subscribable-instances",children:[]},{value:"\ud83d\udd34 Example",id:"-example",children:[]},{value:"\ud83d\udfe6 Typescript",id:"\ud83d\udfe6-typescript",children:[]},{value:"\ud83d\udced Props",id:"-props",children:[]},{value:"\ud83d\udcc4 Return",id:"-return",children:[]}]},{value:"<code>useProxy()</code>",id:"useproxy",children:[{value:"\ud83d\uddc2 Array",id:"-array-1",children:[]},{value:"\ud83c\udff7 Subscribable Instances",id:"-subscribable-instances-1",children:[]},{value:"\ud83d\udd34 Example",id:"-example-1",children:[]},{value:"\ud83d\udfe6 Typescript",id:"\ud83d\udfe6-typescript-1",children:[]},{value:"\ud83d\udced Props",id:"-props-1",children:[]},{value:"\ud83d\udcc4 Return",id:"-return-1",children:[]}]},{value:"<code>useWatcher()</code>",id:"usewatcher",children:[{value:"\ud83d\udd34 Example",id:"-example-2",children:[]},{value:"\ud83d\udfe6 Typescript",id:"\ud83d\udfe6-typescript-2",children:[]},{value:"\ud83d\udced Props",id:"-props-2",children:[]},{value:"\ud83d\udcc4 Return",id:"-return-2",children:[]}]}],p={toc:s};function c(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},"\ud83d\udd25"),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Keep in mind that ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-intro.html"},"React Hooks")," are only supported in ",(0,o.kt)("strong",{parentName:"p"},"Functional React Components"),"!"))),(0,o.kt)("h2",{id:"useagile"},(0,o.kt)("inlineCode",{parentName:"h2"},"useAgile()")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," React Hook binds/subscribes States to Functional React Components.\nThis binding ensures that the Component rerenders whenever a bound State mutates.\nWe can flexibly bind any State to any React Component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"  const myCoolState = useAgile(MY_COOL_STATE); \n")),(0,o.kt)("p",null,"Be aware, that ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," returns the current ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," of the passed State\nand not the State Instance itself."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"const MY_STATE = App.createState('jeff');\n\n// MyComponent.jsx\n\nconst myState = useAgile(MY_STATE);\nconsole.log(myState); // Returns 'jeff'\n")),(0,o.kt)("h3",{id:"-array"},"\ud83d\uddc2 Array"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," also supports ",(0,o.kt)("strong",{parentName:"p"},"arrays")," of State Instances."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const [myCoolState1, myCoolState2] = useAgile([MY_COOL_STATE1, MY_COOL_STATE2]);\n")),(0,o.kt)("p",null,"In which case it returns an array of State ",(0,o.kt)("inlineCode",{parentName:"p"},"values")," that can be destructured."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"const MY_STATE = App.createState('jeff');\nconst MY_STATE_2 = App.createState('frank');\n\n// MyComponent.jsx\n\nconst [myState, myState2] = useAgile([MY_STATE, MY_STATE_2]);\nconsole.log(myState); // Returns 'jeff'\nconsole.log(myState2); // Returns 'frank'\n")),(0,o.kt)("p",null,"Binding multiple States to a Component using a single ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," Hook has one advantage.\nIn some cases, it can reduce the rerender count of the React Component triggered by AgileTs.\nThis is due to the fact that simultaneously triggered rerenders of different States are combined into one single rerender\nif the States share the same ",(0,o.kt)("inlineCode",{parentName:"p"},"SubscriptionContainer"),".\nEach ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," Hook creates its own ",(0,o.kt)("inlineCode",{parentName:"p"},"SubscriptionContainer"),",\nwhich serves as an interface to the Component in order to trigger rerender on it."),(0,o.kt)("h3",{id:"-subscribable-instances"},"\ud83c\udff7 Subscribable Instances"),(0,o.kt)("p",null,"We are not limited to States.\nWe can bind any ",(0,o.kt)("a",{parentName:"p",href:"/test/docs/introduction/#agile-sub-instance"},"Agile Sub Instance")," that owns\nan ",(0,o.kt)("inlineCode",{parentName:"p"},"Observer")," to React Components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"  const [myCollection, myGroup, myState] = useAgile([MY_COLLECTION, MY_GROUP, MY_STATE]);\n")),(0,o.kt)("p",null,"Instances that can be bound to a React Component via the ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," Hook:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"state"},(0,o.kt)("a",{parentName:"h3",href:"/test/docs/core/state"},(0,o.kt)("inlineCode",{parentName:"a"},"State"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"const MY_STATE = App.createState('jeff');\n\n// MyComponent.jsx\n\nconst myState = useAgile(MY_STATE);\nconsole.log(myState); // Returns 'jeff'\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"computed"},(0,o.kt)("a",{parentName:"h3",href:"/test/docs/core/computed"},(0,o.kt)("inlineCode",{parentName:"a"},"Computed"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"const MY_COMPUTED = App.createComputed(() => 'hello there');\n\n// MyComponent.jsx\n\nconst myComputed = useAgile(MY_COMPUTED);\nconsole.log(myComputed); // Returns 'hello there'\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"collection"},(0,o.kt)("a",{parentName:"h3",href:"/test/docs/core/collection"},(0,o.kt)("inlineCode",{parentName:"a"},"Collection"))),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Note:")," The Collection has no own ",(0,o.kt)("inlineCode",{parentName:"p"},"Observer"),".\nBut ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," is smart enough, to identify a Collection\nand binds the ",(0,o.kt)("a",{parentName:"p",href:"/test/docs/core/collection/group#-default-group"},(0,o.kt)("inlineCode",{parentName:"a"},"defualt")," Group")," to the Component instead.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"default")," Group represents the default pattern of the Collection."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{7}","{7}":!0},"const MY_COLLECTION = App.createCollection({\n   initialData: [{id: 1, name: 'a'}, {id: 2, name: 'b'}, {id: 3, name: 'c'}]  \n});\n\n// MyComponent.jsx\n\nconst myCollection = useAgile(MY_COLLECTION);\nconsole.log(myCollection); // Returns (see below)\n// '[{id: 1, name: 'a'}, {id: 2, name: 'b'}, {id: 3, name: 'c'}]'\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"group"},(0,o.kt)("a",{parentName:"h3",href:"/test/docs/core/collection/group"},(0,o.kt)("inlineCode",{parentName:"a"},"Group"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8}","{8}":!0},"const MY_COLLECTION = App.createCollection({\n   initialData: [{id: 1, name: 'a'}, {id: 2, name: 'b'}, {id: 3, name: 'c'}]  \n});\nconst MY_GROUP = MY_COLLECTION.createGroup('myGroup', [3, 1]);\n\n// MyComponent.jsx\n\nconst myGroup = useAgile(MY_GROUP);\nconsole.log(myGroup); // Returns '[{id: 3, name: 'c'}, {id: 1, name: 'a'}]'\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"selector"},(0,o.kt)("a",{parentName:"h3",href:"/test/docs/core/collection/selector"},(0,o.kt)("inlineCode",{parentName:"a"},"Selector"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8}","{8}":!0},"const MY_COLLECTION = App.createCollection({\n   initialData: [{id: 1, name: 'a'}, {id: 2, name: 'b'}, {id: 3, name: 'c'}]  \n});\nconst MY_SELECTOR = MY_COLLECTION.select(2);\n\n// MyComponent.jsx\n\nconst mySelector = useAgile(MY_SELECTOR);\nconsole.log(mySelector); // Returns '{id: 2, name: 'b'}'\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"item"},(0,o.kt)("a",{parentName:"h3",href:"/test/docs/core/collection#-item"},(0,o.kt)("inlineCode",{parentName:"a"},"Item"))),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8}","{8}":!0},"const MY_COLLECTION = App.createCollection({\n   initialData: [{id: 1, name: 'a'}, {id: 2, name: 'b'}, {id: 3, name: 'c'}]  \n});\nconst MY_ITEM = MY_COLLECTION.getItem(3);\n\n// MyComponent.jsx\n\nconst myItem = useAgile(MY_ITEM);\nconsole.log(myItem); // Returns '{id: 3, name: 'c'}'\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h3",{parentName:"li",id:"undefined"},(0,o.kt)("inlineCode",{parentName:"h3"},"undefined")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{1}","{1}":!0},"const myUndefined = useAgile(undefined);\nconsole.log(myUndefined); // Returns 'undefined'\n")))),(0,o.kt)("h3",{id:"-example"},"\ud83d\udd34 Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'  const App = new Agile();\nconst MY_STATE = App.createState("Hello Stranger!");\n\nconst RandomComponent = () => {\n  const myFirstState = useAgile(MY_STATE); // Returns "Hello Stranger!"\n\n  return (\n          <div>\n            <p>{myFirstState}</p>\n            <button\n                    onClick={() => {\n                      MY_STATE.set("Hello Friend!");\n                    }}\n            >\n              Update State\n            </button>\n          </div>\n  );\n}\n\nrender(<RandomComponent/>);\n')),(0,o.kt)("h3",{id:"\ud83d\udfe6-typescript"},"\ud83d\udfe6 Typescript"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," Hook is almost 100% typesafe."),(0,o.kt)("h3",{id:"-props"},"\ud83d\udced Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"deps")),(0,o.kt)("td",{parentName:"tr",align:null},"Array<SubscribableAgileInstancesType",">"," ","|"," SubscribableAgileInstancesType"),(0,o.kt)("td",{parentName:"tr",align:null},"Agile Sub Instances that are bound to the Component in which the useAgile Hook is located"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"config")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/test/docs/interfaces#agilehookconfiginterface"},"AgileHookConfigInterface")),(0,o.kt)("td",{parentName:"tr",align:null},"Configuration"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h4",{id:"subscribableagileinstancestype"},"SubscribableAgileInstancesType"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type SubscribableAgileInstancesType = State | Collection | Observer | undefined;\n")),(0,o.kt)("h3",{id:"-return"},"\ud83d\udcc4 Return"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()")," returns the current ",(0,o.kt)("inlineCode",{parentName:"p"},"output")," of the passed ",(0,o.kt)("a",{parentName:"p",href:"/test/docs/introduction/#agile-sub-instance"},"Agile Sub Instance"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"const MY_STATE = App.createState('jeff');\n\n// MyComponent.jsx\n\nconst myState = useAgile(MY_STATE);\nconsole.log(myState); // Returns 'jeff'\n")),(0,o.kt)("p",null,"When passing multiple Agile Sub Instances, an array of ",(0,o.kt)("inlineCode",{parentName:"p"},"outputs")," matching the passed Instances is returned."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"const MY_STATE = App.createState('jeff');\nconst MY_STATE_2 = App.createState('frank');\n\n// MyComponent.jsx\n\nconst [myState, myState2] = useAgile([MY_STATE, MY_STATE_2]);\nconsole.log(myState); // Returns 'jeff'\nconsole.log(myState2); // Returns 'frank'\n")),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"useproxy"},(0,o.kt)("inlineCode",{parentName:"h2"},"useProxy()")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},"\ud83d\udd25"),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Note"),' that this is a "work in progress" hook that has not yet been tested that extensively.\nBut as far as I can tell, it works quite well. An example is the ',(0,o.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/agilets-large-state-1kr4z"},"Large State Sandbox"),"."))),(0,o.kt)("p",null,"Basically ",(0,o.kt)("inlineCode",{parentName:"p"},"useProxy()")," does the same as ",(0,o.kt)("a",{parentName:"p",href:"#useagile"},(0,o.kt)("inlineCode",{parentName:"a"},"useAgile()")),".\nIt binds/subscribes States to Functional React Components.\nHowever, it differs in one key area.\n",(0,o.kt)("inlineCode",{parentName:"p"},"useProxy()")," wraps a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"Proxy()")," around its return value/s.\nThrough this Proxy, AgileTs is able to track accessed properties of the returned object/s\nand can construct a path to these.\nThe paths allow AgileTs to rerender the Component more efficiently\nby only causing a rerender when an actual accessed property value mutates.\nWith ",(0,o.kt)("inlineCode",{parentName:"p"},"useAgile()"),", the Component is always rerendered on a State change,\nregardless of whether the changed property value is accessed in the Component.\nThis is totally fine if the value is primitive or the whole object is displayed.\nHowever, as soon as we display only a tiny part of the bound State value object,\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"useProxy()")," Hook can reduce the rerender count."),(0,o.kt)("h3",{id:"-array-1"},"\ud83d\uddc2 Array"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useProxy()")," also supports ",(0,o.kt)("strong",{parentName:"p"},"arrays")," of State Instances."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const [myCoolState1, myCoolState2] = useProxy([MY_COOL_STATE1, MY_COOL_STATE2]);\n")),(0,o.kt)("p",null,"In which case it returns an array of State ",(0,o.kt)("inlineCode",{parentName:"p"},"values")," that can be destructured."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"const MY_STATE = App.createState({name: 'jeff', age: 10});\nconst MY_STATE_2 = App.createState({size: 100, weight: 200});\n\n// MyComponent.jsx\n\nconst [myState, myState2] = useProxy([MY_STATE, MY_STATE_2]);\nconsole.log(myState); // Returns '{name: 'jeff', age: 10}'\nconsole.log(myState2); // Returns '{size: 100, weight: 200}'\n")),(0,o.kt)("h3",{id:"-subscribable-instances-1"},"\ud83c\udff7 Subscribable Instances"),(0,o.kt)("p",null,"We are not limited to States.\nWe can bind any ",(0,o.kt)("a",{parentName:"p",href:"/test/docs/introduction/#agile-sub-instance"},"Agile Sub Instance")," that owns\nan ",(0,o.kt)("inlineCode",{parentName:"p"},"Observer")," to React Components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"  const [myCollection, myGroup, myState] = useProxy([MY_COLLECTION, MY_GROUP, MY_STATE]);\n")),(0,o.kt)("p",null,"However, the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"Proxy()")," is only wrapped\naround objects and arrays. The other instances are treated as in ",(0,o.kt)("a",{parentName:"p",href:"#useagile"},(0,o.kt)("inlineCode",{parentName:"a"},"useAgile()")),"."),(0,o.kt)("h3",{id:"-example-1"},"\ud83d\udd34 Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"const App = new Agile();\nconst MY_STATE = App.createState({name: 'jeff', location: 'Germany', age: 19}, {key: 'myState'});\n\nlet rerenderCount = 0;\n\nconst RandomComponent = () => {\n  const myState = useProxy(MY_STATE);\n\n  rerenderCount++;\n\n  return (\n          <div>\n            <p>Name: {myState.name}</p>\n            <p>Rerender: {rerenderCount}</p>\n            <p>State Value: {JSON.stringify(MY_STATE.value)}</p>\n            <button\n                    onClick={() => {\n                      MY_STATE.patch({name: generateId()})\n                    }}\n            >\n              Update Name\n            </button>\n            <button\n                    onClick={() => {\n                      MY_STATE.patch({location: generateId()})\n                    }}\n            >\n              Update Location\n            </button>\n          </div>\n  );\n}\n\nrender(<RandomComponent/>);\n")),(0,o.kt)("h3",{id:"\ud83d\udfe6-typescript-1"},"\ud83d\udfe6 Typescript"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useProxy()")," Hook is almost 100% typesafe."),(0,o.kt)("h3",{id:"-props-1"},"\ud83d\udced Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"deps")),(0,o.kt)("td",{parentName:"tr",align:null},"Array<SubscribableAgileInstancesType",">"," ","|"," SubscribableAgileInstancesType"),(0,o.kt)("td",{parentName:"tr",align:null},"Agile Sub Instances that are bound to the Component in which the useProxy Hook is located"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"config")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/test/docs/interfaces#proxyhookconfiginterface"},"ProxyHookConfigInterface")),(0,o.kt)("td",{parentName:"tr",align:null},"Configuration"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h4",{id:"subscribableagileinstancestype-1"},"SubscribableAgileInstancesType"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"type SubscribableAgileInstancesType = State | Collection | Observer | undefined;\n")),(0,o.kt)("h3",{id:"-return-1"},"\ud83d\udcc4 Return"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useProxy()")," returns the current ",(0,o.kt)("inlineCode",{parentName:"p"},"output")," of the passed ",(0,o.kt)("a",{parentName:"p",href:"/test/docs/introduction/#agile-sub-instance"},"Agile Sub Instance"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"const MY_STATE = App.createState({name: 'jeff', age: 10});\n\n// MyComponent.jsx\n\nconst myState = useProxy(MY_STATE);\nconsole.log(myState); // Returns '{name: 'jeff', age: 10}'\n")),(0,o.kt)("p",null,"When passing multiple Agile Sub Instances, an array of ",(0,o.kt)("inlineCode",{parentName:"p"},"outputs")," matching the passed Instances is returned."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6}","{6}":!0},"const MY_STATE = App.createState({name: 'jeff', age: 10});\nconst MY_STATE_2 = App.createState('frank');\n\n// MyComponent.jsx\n\nconst [myState, myState2] = useProxy([MY_STATE, MY_STATE_2]);\nconsole.log(myState); // Returns '{name: 'jeff', age: 10}'\nconsole.log(myState2); // Returns 'frank'\n")),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"usewatcher"},(0,o.kt)("inlineCode",{parentName:"h2"},"useWatcher()")),(0,o.kt)("p",null,"Creates a  ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," that observes the State on changes.\nThe provided ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," function will be fired on every State ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," mutation.\nFor instance if we update the State value from 'jeff' to 'hans'."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"useWatcher(MY_STATE, (value) => {\n  console.log(value); // Returns current State Value\n});\n")),(0,o.kt)("p",null,"It is a synonym to the ",(0,o.kt)("a",{parentName:"p",href:"/test/docs/core/state/methods#watch"},(0,o.kt)("inlineCode",{parentName:"a"},"watch()"))," method.\nHowever, it has some advantages.\nFor example, it automatically cleans up the created watcher callback when the React Component unmounts\nand might be cleaner to read in 'UI-Component-Code'."),(0,o.kt)("h3",{id:"-example-2"},"\ud83d\udd34 Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'const App = new Agile();\nconst MY_STATE = App.createState("hello");\n\nconst RandomComponent = () => {\n  useWatcher(MY_STATE, (value) => {\n    toast("New Value: " + value);\n  });\n\n  return (\n          <div>\n            <button\n                    onClick={() => {\n                      MY_STATE.set("bye");\n                    }}\n            >\n              Change State\n            </button>\n          </div>\n  );\n}\n\nrender(<RandomComponent/>);\n')),(0,o.kt)("h3",{id:"\ud83d\udfe6-typescript-2"},"\ud83d\udfe6 Typescript"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useWatcher()")," Hook is almost 100% typesafe."),(0,o.kt)("h3",{id:"-props-2"},"\ud83d\udced Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"state")),(0,o.kt)("td",{parentName:"tr",align:null},"State<T",">"),(0,o.kt)("td",{parentName:"tr",align:null},"State to which the passed watcher callback is applied"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"callback")),(0,o.kt)("td",{parentName:"tr",align:null},"StateWatcherCallback<T",">"),(0,o.kt)("td",{parentName:"tr",align:null},"Callback function that is called on each State value change"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,o.kt)("h3",{id:"-return-2"},"\ud83d\udcc4 Return"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"void\n")))}c.isMDXComponent=!0}}]);
(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[628],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){"use strict";var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},1395:function(e,t,n){"use strict";n.d(t,{Z:function(){return p}});var a=n(7294),o=n(944),r=n(6010),i="tabItem_1uMI",l="tabItemActive_2DSg";var s=37,c=39;var p=function(e){var t=e.lazy,n=e.block,p=e.defaultValue,u=e.values,d=e.groupId,m=e.className,h=(0,o.Z)(),g=h.tabGroupChoices,k=h.setTabGroupChoices,f=(0,a.useState)(p),v=f[0],y=f[1],C=a.Children.toArray(e.children),N=[];if(null!=d){var b=g[d];null!=b&&b!==v&&u.some((function(e){return e.value===b}))&&y(b)}var T=function(e){var t=e.currentTarget,n=N.indexOf(t),a=u[n].value;y(a),null!=d&&(k(d,a),setTimeout((function(){var e,n,a,o,r,i,s,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,o=e.bottom,r=e.right,i=window,s=i.innerHeight,c=i.innerWidth,n>=0&&r<=c&&o<=s&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},w=function(e){var t,n;switch(e.keyCode){case c:var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case s:var o=N.indexOf(e.target)-1;n=N[o]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},m)},u.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,r.Z)("tabs__item",i,{"tabs__item--active":v===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:T,onClick:T},n)}))),t?(0,a.cloneElement)(C.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},C.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},9443:function(e,t,n){"use strict";var a=(0,n(7294).createContext)(void 0);t.Z=a},944:function(e,t,n){"use strict";var a=n(7294),o=n(9443);t.Z=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},7663:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(2122),o=n(9756),r=(n(7294),n(3905)),i=n(1395),l=n(8215),s={id:"react",title:"React",sidebar_label:"React",slug:"/quick-start/react"},c={unversionedId:"quick_start/react",id:"quick_start/react",isDocsHomePage:!1,title:"React",description:"Welcome to the React quick start guide. This tutorial will introduce you to AgileTs",source:"@site/docs/quick_start/React.md",sourceDirName:"quick_start",slug:"/quick-start/react",permalink:"/test/docs/quick-start/react",editUrl:"https://github.com/agile-ts/documentation/tree/develop/docs/quick_start/React.md",version:"current",lastUpdatedAt:1621007124,formattedLastUpdatedAt:"5/15/2021",sidebar_label:"React",frontMatter:{id:"react",title:"React",sidebar_label:"React",slug:"/quick-start/react"},sidebar:"docs",previous:{title:"Contributing",permalink:"/test/docs/contributing"},next:{title:"Vue",permalink:"/test/docs/quick-start/vue"}},p=[{value:"\ud83d\udd3d Installation",id:"-installation",children:[{value:"\ud83d\udcc1 <code>@agile-ts/core</code>",id:"-agile-tscore",children:[]},{value:"\ud83d\udcc2 <code>@agile-ts/react</code>",id:"-agile-tsreact",children:[]}]},{value:"\ud83d\udca1 Create first State",id:"-create-first-state",children:[{value:"\u2753 What is a State",id:"-what-is-a-state",children:[]},{value:"\ud83d\udd34 Live Example",id:"live-example-1",children:[]},{value:"\ud83d\udcbb Important Code Snippets",id:"important-code-snippets-1",children:[]},{value:"\ud83d\ude31 Troubleshooting",id:"-troubleshooting",children:[]}]},{value:"\ud83d\udca1 Create first Collection",id:"-create-first-collection",children:[{value:"\u2753 What is a Collection",id:"-what-is-a-collection",children:[]},{value:"\ud83d\udd34 Live Example",id:"live-example-2",children:[]},{value:"\ud83d\udcbb Important Code Snippets",id:"important-code-snippets-2",children:[]}]},{value:"\ud83d\udd0d Next Steps",id:"-next-steps",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Welcome to the ",(0,r.kt)("a",{parentName:"p",href:"https://www.reactjs.org"},"React")," quick start guide. This tutorial will introduce you to AgileTs\nand teach you how to use its basic functionalities in React.\nBy the time you finish this guide, you should be able to start building your own AgileTs applications.\n",(0,r.kt)("strong",{parentName:"p"},"We recommend proceeding from top to bottom because some sections build on each other.")),(0,r.kt)("h2",{id:"-installation"},"\ud83d\udd3d Installation"),(0,r.kt)("p",null,"Let's start with the installation. If you haven't planned to install AgileTs yet,\nyou can skip the Installation Section and jump straight into the '",(0,r.kt)("a",{parentName:"p",href:"#-create-first-state"},"Create first State"),"' guide."),(0,r.kt)("p",null,"In order to use AgileTs in a React Environment, we need to install two packages."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#-agile-tscore"},(0,r.kt)("inlineCode",{parentName:"a"},"@agile-ts/core"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#-agile-tsreact"},(0,r.kt)("inlineCode",{parentName:"a"},"@agile-ts/react")))),(0,r.kt)(i.Z,{defaultValue:"javascript",values:[{label:"Javascript",value:"javascript"},{label:"Typescript",value:"typescript"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"}," npx create-react-app my-app --template agile\n"))),(0,r.kt)(l.Z,{value:"typescript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"}," npx create-react-app my-app --template agile-typescript\n")))),(0,r.kt)("p",null,"If you have planned to start a project from scratch using AgileTs, feel free to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"create-react-app")," command with the AgileTs template.\nThis will automatically generate a fully functional react-app with AgileTs installed.\nOtherwise, you can install the ",(0,r.kt)("inlineCode",{parentName:"p"},"core")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"react")," packages directly in your existing React application."),(0,r.kt)("h3",{id:"-agile-tscore"},"\ud83d\udcc1 ",(0,r.kt)("inlineCode",{parentName:"h3"},"@agile-ts/core")),(0,r.kt)(i.Z,{defaultValue:"npm",groupId:"npm2yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @agile-ts/core \n"))),(0,r.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @agile-ts/core\n")))),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/core"},(0,r.kt)("inlineCode",{parentName:"a"},"core"))," package contains the State Management Logic of AgileTs\nand therefore offers powerful classes such as the ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/core/state"},(0,r.kt)("inlineCode",{parentName:"a"},"State Class")),"."),(0,r.kt)("h3",{id:"-agile-tsreact"},"\ud83d\udcc2 ",(0,r.kt)("inlineCode",{parentName:"h3"},"@agile-ts/react")),(0,r.kt)(i.Z,{defaultValue:"npm",groupId:"npm2yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @agile-ts/react \n"))),(0,r.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @agile-ts/react\n")))),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/react"},"React Integration"),", on the other hand, is an interface to React and provides useful functions\nlike the ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/react/hooks#useagile"},(0,r.kt)("inlineCode",{parentName:"a"},"useAgile()"))," hook to bind States to React Components for reactivity."),(0,r.kt)("h2",{id:"-create-first-state"},"\ud83d\udca1 Create first State"),(0,r.kt)("p",null,"After we have set up a project with AgileTs installed, we can start creating our first AgileTs State.\nBut first things first, what is a State in AgileTs?"),(0,r.kt)("h3",{id:"-what-is-a-state"},"\u2753 What is a State"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"State")," provides a global ",(0,r.kt)("em",{parentName:"p"},"information")," we need to remember at a later point in time.\nSuch information might be the current theme or the logged-in user,\nwhich we need to access globally in multiple Components.\nIn AgileTs States are created with the help\nof an instantiated ",(0,r.kt)("a",{parentName:"p",href:"#agile-instance-app"},"Agile Instance")," often called ",(0,r.kt)("inlineCode",{parentName:"p"},"App"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const MY_FIRST_STATE = App.createState("Hello World");\n')),(0,r.kt)("p",null,"After a successful instantiation, we can dynamically and easily manipulate its value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'MY_FIRST_STATE.set("Hello There"); // Set State Value to "Hello There"\nMY_FIRST_STATE.undo(); // Undo latest change\nMY_FIRST_STATE.is("Hello World"); // Check if State has a specific Value\nMY_FIRST_STATE.persist(); // Persist State Value into Storage\n')),(0,r.kt)("h4",{id:"agile-instance-app"},(0,r.kt)("inlineCode",{parentName:"h4"},"Agile Instance (App)")),(0,r.kt)("p",null,"As you have just seen, States are created with the help of an instantiated ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/core/agile-instance"},"Agile Instance")," called ",(0,r.kt)("inlineCode",{parentName:"p"},"App"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const App = new Agile();\n")),(0,r.kt)("p",null,"But what is this ",(0,r.kt)("em",{parentName:"p"},"Agile Instance")," and why do we need it to create a State?\nSimply put, the Agile Instance is the brain of AgileTs and manages all our States.\nIt should be noted that it doesn't store the States; It only manages them.\nEach State has an Instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Agile Class"),", for example, to ingest its changes into the ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime"),".\nIn summary, the main tasks of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Agile Class")," are to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"queuing ",(0,r.kt)("a",{parentName:"li",href:"/test/docs/introduction/#agile-sub-instance"},(0,r.kt)("inlineCode",{parentName:"a"},"Agile Sub Instance")),"\nchanges in the ",(0,r.kt)("inlineCode",{parentName:"li"},"runtime")," and preventing race conditions"),(0,r.kt)("li",{parentName:"ul"},"update/rerender subscribed Components through Integrations like the ",(0,r.kt)("a",{parentName:"li",href:"/test/docs/react"},"React Integration")),(0,r.kt)("li",{parentName:"ul"},"Integrating with persistent ",(0,r.kt)("a",{parentName:"li",href:"/test/docs/core/storage"},"Storage")),(0,r.kt)("li",{parentName:"ul"},"provide configuration object")),(0,r.kt)("h3",{id:"live-example-1"},"\ud83d\udd34 Live Example"),(0,r.kt)("p",null,"To get a better understanding of how to use a State, we should try it out.\nTherefore, we have created a Live Example, where we can see a ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/core/state"},"State")," in action.\nThe sample project we'll look at is a small counter that lets us increase a number as we click the 'Update State' button.\nIt may not be fascinating, but it shows all the essential pieces of a React + AgileTs application in action.\nAfter playing a bit with the live example, we recommend taking a look at the ",(0,r.kt)("a",{parentName:"p",href:"#important-code-snippets-1"},"Important Code Snippets Section")," below,\nwhere important code snippets related to AgileTs are described in more detail.\nIn case you have any further questions, don't hesitate to join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/T9GzreAwPH"},"Community Discord"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"// 1\ufe0f\u20e3 Create Instance of AgileTs\nconst App = new Agile();\n\n// 2\ufe0f\u20e3 Create State with the help of before defined Agile Instance\nconst MY_FIRST_STATE = App.createState(\"Hello World\");\n\nlet helloWorldCount = 0;\nconst RandomComponent = () => {\n    // 3\ufe0f\u20e3 Bind initialized State to 'RandomComponent' for reactivity\n    const myFirstState = useAgile(MY_FIRST_STATE);\n\n    return (\n        <div>\n            <p>{myFirstState}</p>\n            <button\n                onClick={() => {\n                    // 4\ufe0f\u20e3 Update State value on Button press\n                    MY_FIRST_STATE.set(`Hello World ${++helloWorldCount}`);\n                }}\n            >\n                Update State\n            </button>\n        </div>\n    );\n}\n\nrender(<RandomComponent/>);\n")),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/agilets-first-state-f12cz"},"code sandbox")," to see the whole example in a production near environment."),(0,r.kt)("h3",{id:"important-code-snippets-1"},"\ud83d\udcbb Important Code Snippets"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const App = new Agile();\n")),(0,r.kt)("p",null,"1\ufe0f\u20e3 In order to instantiate any State, we need an AgileTs Instance.\nSuch an Instance can be seen as the brain of AgileTs, which manages all our States.\nBe aware that you should avoid having multiple Agile Instances in one application!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const MY_FIRST_STATE = App.createState("Hello World");\n')),(0,r.kt)("p",null,"2\ufe0f\u20e3 Now, we can create our first State using the previously instantiated AgileTs Instance.\nIn our example, we have assigned the initial Value ",(0,r.kt)("inlineCode",{parentName:"p"},"'Hello World'")," to the State."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const myFirstState = useAgile(MY_FIRST_STATE); // Returns 'Hello World x'\n")),(0,r.kt)("p",null,"3\ufe0f\u20e3 Here we bind our created State to the React Component using the ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/react/hooks#useagile"},(0,r.kt)("inlineCode",{parentName:"a"},"useAgile()"))," Hook.\nThis ensures that the Component rerenders whenever the State ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," mutates.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"useAgile()")," Hook returns the current ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," of the State. So in our case 'Hello World'.\nBe aware that React Hooks can only be used in Function Components!\nFor Class Components we have provided a Higher Order Component called ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/react/AgileHOC"},"AgileHOC")," as alternative."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"MY_FIRST_STATE.set(`Hello World ${++helloWorldCount}`);\n")),(0,r.kt)("p",null,"4\ufe0f\u20e3 To bring some life into our small application,\nwe update the State value with the help of the ",(0,r.kt)("inlineCode",{parentName:"p"},"set()")," function on each 'Update State' button press."),(0,r.kt)("h3",{id:"-troubleshooting"},"\ud83d\ude31 Troubleshooting"),(0,r.kt)("h4",{id:"component-doesnt-rerender-when-state-mutates"},"Component doesn't rerender when State mutates."),(0,r.kt)("p",null,"Such an issue might occur when the automatic integration of React has failed.\nIt often helps to manually integrate the React Integration into the Agile Instance then."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Agile} from "./agile";\nimport reactIntegration from "@agile-ts/react";\n\nconst App = new Agile().integrate(reactIntegration);\n')),(0,r.kt)("p",null,"If the problem continues to occur. Join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/T9GzreAwPH"},"Community Discord"),".\nWe are looking forward to helping you."),(0,r.kt)("h2",{id:"-create-first-collection"},"\ud83d\udca1 Create first Collection"),(0,r.kt)("p",null,"Now that we know the basics of the State Class, we can continue learning something about Collections.\nSimply put, a flexible array of States."),(0,r.kt)("h3",{id:"-what-is-a-collection"},"\u2753 What is a Collection"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Collection")," provides a global set of ",(0,r.kt)("em",{parentName:"p"},"information")," we need to remember at a later point in time.\nIt is designed for arrays of ",(0,r.kt)("inlineCode",{parentName:"p"},"data objects")," following the same pattern.\nFor example, it can be used to remember a flexible list of todo items globally.\nLike a State, it is created with the help of an instantiated ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/core/agile-instance"},"Agile Instance")," often called ",(0,r.kt)("inlineCode",{parentName:"p"},"App"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const MY_COLLECTION = App.createCollection();\n")),(0,r.kt)("p",null,"After a successful instantiation, we can dynamically and easily manipulate its value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'TODOS.collect({id: "id1", todo: "Clean Bathroom"}); // Add new Data\nTODOS.update("id1", {todo: "Clean Room"}); // Update already collected Data\nTODOS.remove("id1").everywhere(); // Remove Data at \'id1\'\nTODOS.persist(); // Persist Collection Value into Storage\n')),(0,r.kt)("p",null,"Each data we collect ",(0,r.kt)("strong",{parentName:"p"},"needs a unique primary key")," like an ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," to be correctly identified later."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'TODOS.collect({id: "id2", todo: "Try AgileTs"});\n')),(0,r.kt)("p",null,"In the above code snippet, 'id2' at the primary key property ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," is the unique primary key.\nEvery collected data will be automatically transformed into an extension of the State Class called ",(0,r.kt)("inlineCode",{parentName:"p"},"Item"),".\nSuch an Item has the collected data as ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),', so in the above example, that would be \'{id: "id2", todo: "Try AgileTs"}\'.\nA so-called Item has the same functionalities as normal States.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"MY_COLLECTION.getItem('id2').patch({todo: \"Clean Bathroom\"});\n")),(0,r.kt)("p",null,"Besides Items, a Collection consists primarily of Groups.\nA Group allows us to split a Collection into multiple individual sections without\nlosing any redundant behavior. By default, each Item will be added to the ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," Group, representing the default Collection pattern.\nKeep in mind, that a Group doesn't store the Item itself. It only holds an array of ",(0,r.kt)("inlineCode",{parentName:"p"},"primaryKeys")," like a keymap of the data it represents."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const USER_TODOS = TODOS.createGroup("user-todos", ["id1", "id2"]); // TODOS of a specifc User\nconst TODAY_TODOS = TODOS.createGroup("today-todos", ["id3", "id2", "id5"]); // TODOS for Today\n')),(0,r.kt)("p",null,"You can imagine a Group like an interface to the Collection Data."),(0,r.kt)("h3",{id:"live-example-2"},"\ud83d\udd34 Live Example"),(0,r.kt)("p",null,"In this Live Example, we see a simple ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/core/collection"},"Collection")," in action.\nThe sample project we'll look at is a small todo list that lets us create todos with the help of a text input and remove them with a button below each todo item.\nIn case you have any further questions, don't hesitate to join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/T9GzreAwPH"},"Community Discord"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"// 1\ufe0f\u20e3 Create Instance of AgileTs\nconst App = new Agile();\n\n// 2\ufe0f\u20e3 Create Collection with the help of before defined Agile Instance\nconst TODOS = App.createCollection({\n  initialData: [{id: 1, name: \"Clean Bathroom\"}]\n}).persist('todos'); // 'persist()' does store the Collection in the LocalStorage\n\nconst RandomComponent = () => {\n    // 3\ufe0f\u20e3 Bind initialized Collection to 'RandomComponent' for reactivity\n    const todos = useAgile(TODOS);\n\n    // Current Input of Name Form\n    const [currentInput, setCurrentInput] = React.useState(\"\");\n\n    return (\n        <div>\n            <h3>Simple TODOS</h3>\n            <input type=\"text\" name=\"name\" value={currentInput} onChange={(event) => {\n                setCurrentInput(event.target.value);\n            }}/>\n            <button onClick={() => {\n              if(currentInput === '') return;\n                \n              // 4\ufe0f\u20e3 Add new Todo to Collection based on current input\n              TODOS.collect({id: generateId(), name: currentInput});\n              setCurrentInput('');\n            }}>\n                Add\n            </button>\n            {\n                todos.map((value) =>\n                    <div key={value.id} style={{marginBottom: 10}}>\n                        <div>{value.name}</div>\n                        <button style={{margin: 0}}  onClick={() => {\n                         // 5\ufe0f\u20e3 Remove Todo from Collection on button press\n                         TODOS.remove(value.id).everywhere();\n                       }}>\n                        Remove\n                      </button>\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\nrender(<RandomComponent/>);\n")),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/agilets-first-collection-uyi9g"},"code sandbox")," to see the whole example in a production near environment."),(0,r.kt)("h3",{id:"important-code-snippets-2"},"\ud83d\udcbb Important Code Snippets"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const MY_FIRST_COLLECTION = App.createCollection({\n  initialData: [{id: 1, name: \"Clean Bathroom\"}]\n}).persist('todos');\n")),(0,r.kt)("p",null,"2\ufe0f\u20e3 In order to create our first Collection, we need the previously instantiated Instance of AgileTs called ",(0,r.kt)("inlineCode",{parentName:"p"},"App"),".\nThen we can bring our first Collection to life and add the initial data ",(0,r.kt)("inlineCode",{parentName:"p"},'{id: 1, name: "Clean Bathroom"}')," to it.\nBesides the creation, we store the Collection permanently in the ",(0,r.kt)("inlineCode",{parentName:"p"},"localStorage")," with the help of the ",(0,r.kt)("inlineCode",{parentName:"p"},"persist()")," method.\nSo if you refresh the page, your modifications to the todo list shouldn't be lost."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const myFirstCollection = useAgile(MY_FIRST_COLLECTION);\n")),(0,r.kt)("p",null,"3\ufe0f\u20e3 Here we use the ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/react/hooks#useagile"},(0,r.kt)("inlineCode",{parentName:"a"},"useAgile()"))," React Hook\nto bind our Collection to the React Component.\nWhen passing a Collection, ",(0,r.kt)("inlineCode",{parentName:"p"},"useAgile()")," returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," Group ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," in array shape.\nSo in our case, something like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"[\n    {id: 1, name: 'Clean Bathroom'},\n    {id: 5, name: 'Learn AgileTs'}\n]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"}," MY_FIRST_COLLECTION.collect({id: generateId(), name: currentInput});\n")),(0,r.kt)("p",null,"4\ufe0f\u20e3 To add new Data to the Collection, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"collect()")," method.\nIn the example snippet, we add the ",(0,r.kt)("em",{parentName:"p"},"currentInput")," with a random ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," as primaryKey to the Collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"TODOS.remove(value.id).everywhere();\n")),(0,r.kt)("p",null,"5\ufe0f\u20e3 If we have done a todo, of course, we want to remove it.\nFor this, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"remove()")," method and pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"primaryKey")," of the Item to be removed.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"everywhere()")," tag means that the Item will be removed from the whole Collection\nand not just from a specific Group."),(0,r.kt)("h2",{id:"-next-steps"},"\ud83d\udd0d Next Steps"),(0,r.kt)("p",null,"Now that you know the basics of AgileTs, you can take a look into the ",(0,r.kt)("a",{parentName:"p",href:"/test/docs/style-guide"},"Style Guide")," Section,\nto learn something about: How to structure an application using AgileTs?\nOr you check out the specific package documentations, where everything is described in more detail."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/test/docs/core"},"core")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/test/docs/react"},"react"))))}d.isMDXComponent=!0},6010:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}n.d(t,{Z:function(){return o}})}}]);